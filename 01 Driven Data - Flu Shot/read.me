Competition: Flu Shot Learning: Predict H1N1 and Seasonal Flu Vaccines
This competition is for learning and exploring.

Task (short): predict whether people got H1N1 and seasonal flu vaccines
using information they shared about their backgrounds, opinions, and health behaviors.

Task (detailed): predict how likely individuals are to receive their H1N1 and seasonal flu vaccines.
Specifically, you'll be predicting two probabilities: one for h1n1_vaccine and one for seasonal_vaccine.

Labels:
h1n1_vaccine - Whether respondent received H1N1 flu vaccine.
seasonal_vaccine - Whether respondent received seasonal flu vaccine.
Both are binary variables: 0 = No; 1 = Yes.
Some respondents didn't get either vaccine, others got only one, and some got both.
This is formulated as a multilabel (and not multiclass) problem.

Features:
You are provided a dataset with 36 columns.
The first column respondent_id is a unique and random identifier.
The remaining 35 features are described below.

Data exploration:
1. Explore labels : if received h1n1 / seasonal vaccine
More people received a seasonal vaccine compared to h1n1:
about a 1/2 of population received a seasonal vaccine (46.5%) and 1/5 received h1n1 vaccine (21.2%).

2. Explore features
- Observation : employment_occupation, keep and treat as real value.
Rational for decision: Even though the description states that values are represented as short random character string,
(a) values might be coded for sensitivity reasons, so it is possible to encode to analyse the results.
(b) same code could be reused for future cases where the employment occupation holds a value.
- Observation : employment_industry, keep and treat as real value.
Rational for decision: same as above. Review the decision after additional analysis.
- Question : employment_occupation, employment_industry : what are the values in data? Perform some exploration
whether these features are randomly represented in the distribution of vaccinated / not vaccinated.
Based on the analysis, either encode or drop.

- Observation : household_children, cast to int.
Rational for decision: possible values are integer numbers: 0 (18.7k), 1 (3.2k), 2 (2.8k) and 3 (1.7k).

- Observation : household_adults
Action 1 : cast to int.
Rational for decision: same as above: 0 (8k), 1 (14.5k), 2 (2.8k) and 3 (1.1k).
Action 2 : review how it is possible to have zeros (no adults)? Need to explore those entries carefully.

- Observation : hhs_geo_region
Action : keep as is.
Rational for decision: this is 10-region geographic classification by US Dept. of Health.

- Observation : employment_status
Action 1 : keep as is for exploration
Rational for decision: reasonable values as Employed (13.6k), Unemployed (1.4k) and Not in Labor Force (10.2k).

Action 2 : create two new features for the model
    - is_employed, Boolean but encoded as 0/1 for model
        Employed          ... 1
        Unemployed        ... 0
    - empl_status
        Employed           ... 2
        Not in Labor Force ... 0 (custom choice, the value might be revisited)
        Unemployed         ... 1

Action 3 : create yet another feature using encoding

- Observation : rent_or_own
Action : change to is_own coded as 1 (Own) and 0 (Rent)
Rational for decision: possible values are Own (18.7k) and Rent (5.9k), possible to use is_condition logic.

- Observation : marital_status
Action : change to is_married for married (1) and not married (0)
Rational for decision: possible values are Married (13.5k), Not Married (11.7k), possible to use is_condition logic.

- Observation : income_poverty, create three features
Current values :
    <= $75,000, Above Poverty    12777
    > $75,000                     6810
    Below Poverty                 2697
Action :
For the analysis, we will create three new features based on the income_poverty:
    - is_income_gt_75k : boolean-like, coded as 0/1
        <= $75,000, Above Poverty  ... 0
        > $75,000                  ... 1
        Below Poverty              ... 0
    - is_above_poverty : boolean-like, coded as 0/1
        <= $75,000, Above Poverty  ... 1
        > $75,000                  ... 1
        Below Poverty              ... 0
    - social class : encode to 0,1,2 for low, middle and high class
        <= $75,000, Above Poverty  ... 1 (middle class)
        > $75,000                  ... 2 (high class)
        Below Poverty              ... 0 (low class)

- Observation : sex
Action 1 : create a boolean-like feature is_woman with 0/1.
Rational for decision: possible values are Female (15.9k) and Male (10.8k), possible to use is_condition logic.

Action 2 : create a feature "gender" with values "man" or woman for charts.
As per another feature with age, the youngest is 18 - 34 years, meaning there are no children in the sample.

- Observation : race
Action 1 : keep as is for exploration.
Rational for decision : might get some insights from data.
Action 2 : For the model, we will use Ordinal Encoder

- Observation : Education
Action 1 : keep as is for exploration.
Rational for decision : might get some insights from data.

Action 2 : create two news feature for the model (manual and auto)
Rational for decision : for manual, encode the education as numerical value from low (0) to high (2).
For auto, we will use Ordinal Encoder.
This parameter is self-reported, not fully transparent how to translate values to numbers.
    - is_educated_manual
        12 Years            ... 2
        < 12 Years          ... 1
        College Graduate    ... 1
        Some College        ... 0
    - education_encoded

- Observation : age_group
Action 1 : keep as is for visualisations
Rational for decision: there might be interesting insights
Action 2 : create a new numeric feature for the model
Rational for decision: possible to implement numeric logic.
    - age
        65+ Years        ... 4
        55 - 64 Years    ... 3
        45 - 54 Years    ... 2
        35 - 44 Years    ... 1
        18 - 34 Years    ... 0

- Observation : opinion_seas_sick_from_vacc
This is respondents worry of getting sick from seasonal flu vaccine.
The majority of respondents are not worried (11.8k).
Action 1 : Create a new feature based on it, integer. Keep "dont know" in the middle to have the same distance to Y/N.
    - is_worried_seas_sick_from_vacc
        1.0     (not worried)       ... 0
        2.0     (not very worried)  ... 1
        3.0     (don't know)        ... 2
        4.0     (somewhat worried)  ... 3
        5.0     (very worried)      ... 4

Action 2 : Create a new feature with description (in English) for visualization

- Observation : opinion_seas_risk
This is respondents opinion about risk of getting sick with seasonal flu without vaccine.
The majority of respondents replied "somewhat low" (8.9k).
Action 1 : Create a new feature based on it, integer. Keep "dont know" in the middle to have the same distance to Y/N.
    - is_worried_seas_risk
        1.0    (very low)      ... 0
        2.0    (somewhat low)  ... 1
        3.0    (dont know)     ... 2
        4.0    (somewhat high) ... 3
        5.0    (very high)     ... 4

Action 2 : Create a new feature with description (in English) for visualization

- Observation : opinion_seas_vacc_effective
Respondents opinion about seasonal flu vaccine effectiveness.
The majority replied "Somewhat effective" (11.6k) and "Very effective" (9.9k)
Action 1 : Create a new feature based on it, integer. Keep "dont know" in the middle to have the same distance to Y/N.
    - is_seas_vacc_effective
        1.0    (not al all effective)   ... 0
        2.0    (not very effective)     ... 1
        3.0    (dont know)              ... 2
        4.0    (somewhat effective)     ... 3
        5.0    (very effective)         ... 4

Action 2 : Create a new feature with description (in English) for visualization

- Observation : opinion_h1n1_sick_from_vacc
This is respondents worry of getting sick from taking h1n1 vaccine.
The majority of respondents are not very worried (9.1k).
Action 1 : Create a new feature based on it, integer. Keep "dont know" in the middle to have the same distance to Y/N.
    - is_worried_h1n1_sick_from_vacc
        1.0     (not worried)       ... 0
        2.0     (not very worried)  ... 1
        3.0     (don't know)        ... 2
        4.0     (somewhat worried)  ... 3
        5.0     (very worried)      ... 4

Action 2 : Create a new feature with description (in English) for visualization

- Observation : opinion_h1n1_risk
Respondents opinion about risk of getting sick with h1n1 flu without vaccine.
The majority of respondents replied "somewhat low" (9.9k).
Action 1 : Create a new feature based on it, integer. Keep "dont know" in the middle to have the same distance to Y/N.
    - is_worried_h1n1_risk
        1.0    (very low)      ... 0
        2.0    (somewhat low)  ... 1
        3.0    (dont know)     ... 2
        4.0    (somewhat high) ... 3
        5.0    (very high)     ... 4

Action 2 : Create a new feature with description (in English) for visualization

- Observation : opinion_h1n1_vacc_effective
Respondents opinion about h1n1 vaccine effectiveness.
The majority replied "Somewhat effective" (11.6k).
Action 1 : Create a new feature based on it, integer. Keep "dont know" in the middle to have the same distance to Y/N.
    - is_h1n1_vacc_effective
        1.0    (not al all effective)   ... 0
        2.0    (not very effective)     ... 1
        3.0    (dont know)              ... 2
        4.0    (somewhat effective)     ... 3
        5.0    (very effective)         ... 4

Action 2 : Create a new feature with description (in English) for visualization

- Observation : health_insurance
Current values are 0.0 (1 736) and 1.0 (12 697) with the majority of respondents having health insurance.
Action : create a new int feature
    - has_health_insurance, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : health_worker
The most respondents have not reported themself being a healthcare worker, compare 23.k vs 2.9k.
Action : create a new int feature (same logic as above)
    - is_health_worker, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : child_under_6_months
The majority of respondents replied not having a regular contact with the child under age of six months (23.7k),
while some did (2.1k).
Action : create a new int feature (same logic as above)
    - has_child_under_6_months, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : chronic_med_condition
The full list of chronically medical conditions in scope is provided in the materials by DataDriven with
the problem statement. Respondents generally replied not having (18.4k) rather than yes (7.2k).
Action : create a new int feature (same logic as above)
    - has_chronic_med_condition, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : doctor_recc_seasonal
Seasonal flue vaccine was recommended by doctor to the majority of respondents (16.4k), compared to (8k).
Action : create a new int feature (same logic as above)
    - is_doctor_recc_seasonal, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : doctor_recc_h1n1, create a new int feature (same logic as above)
Seasonal flue vaccine was recommended by doctor to the majority of respondents (19.1k), compared to (5.4k).
Curiously, that h1n1 was recommended more broadly by doctors compared to seasonal vaccine.
Action 1 : create a new int feature (same logic as above)
    - is_doctor_recc_h1n1, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model
Action 2 : investigate the fields with recommendations and actual receiving or not vaccines.

- Observation : behavioral_touch_face
Interesting how the majority of respondents (still not all) report themselves to avoid touching face : 18k vs 8.5k.
Action : create a new int feature (same logic as above)
    - avoided_touch_face, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : behavioral_outside_home
This feature holds values for has reduced contact with people outside of own household.
Action : create a new int feature (same logic as above)
    - reduced_outside_home, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : behavioral_large_gatherings
This feature holds values for has reduced time at large gatherings.
Action : create a new int feature (same logic as above)
    - reduced_large_gatherings, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : behavioral_wash_hands
This feature holds values for has frequently washed hands or used hand sanitizer.
Action : create a new int feature (same logic as above)
    - has_wash_hands, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : behavioral_face_mask
This feature contains values for has bought a face mask.
The majority reported buying a face mask (24.8), and curiously the feature is not "has used a mask".
Action : create a new int feature (same logic as above)
    - bought_face_mask, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : behavioral_avoidance
Has avoided close contact with others flu-like symptoms
Action : create a new int feature (same logic as above)
    - has_avoided_contact_flu_symptoms, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : behavioral_antiviral_meds
Has taken antiviral medications, and a large majority did (25.3k vs 1.3k).
Logically we miss here a feature for had symptoms for taking antiviral medications.
Action : create a new int feature (same logic as above)
    - taken_antiviral_medications, and cast floats to int (1.0 -> 1)
Rational : create feature easily absorbed by a model

- Observation : h1n1_knowledge
Level of knowledge about h1n1 flu
A small portion of respondents considered themselves not having knowledge (2.5k).
Action 1 : create new feature to adapt the logic of the knowledge pool
Rational : changed "a lot of knowledge" to 3 to adapt a logic behind the degree of knowledge.
If "none" is coded with 0, "a little" is coded as 1 then the next should be "somewhat knowledge" coded as 2.
    - has_h1n1_knowledge
        0    (no knowledge)         ... 0
        1    (a little knowledge)   ... 1
        2    (a lot of knowledge)   ... 3  <- this is changed

Action 2 : Create a new feature with description (in English) for visualization

- Observation : h1n1_concern
Level of concern about the h1n1 flu.
Action 1 : create a new feature with added a value in the middle to align with other concern/worried features.
We wil also keep the current feature for the model,
the recommendation is to perform the assessment of feature importance.
        1     (not at all concerned)  ... 0
        2     (not very concerned)    ... 1
        3     (don't know)            ... 2   <- this is a new one
        4     (somewhat concerned)    ... 3
        5     (very concerned)        ... 4

Action 2 : Create a new feature with description (in English) for visualization

Data insights
- Ratings
Respondents are requested to provided their opinion for seasonal and h1n1 flu
    - vaccine effectiveness
    - risk of getting sick without vaccine
    - risk of getting sick from vaccine
and in addition related to h1n1 flue
    - level of concern about the h1n1 flu
    - level of knowledge about h1n1 flu
Generally, respondent showed similar opinion about vaccine effectiveness, risk of getting sick from/without vaccine
for both seasonal and h1n1 flu. In general, the seasonal vaccine is viewed as more effective and more secure.
Also respondent tend to believe it is more risky to get sick without seasonal vaccine compared to h1n1 vaccine.
More than a half of population if concerned about h1n1 flu.
Respondents either have no knowledge about h1n1 flu, a little knowledge or a lot of knowledge.

- Behavioural features
Respondents provide the testimony on multiple behavioural patterns. Here is the list of features ordered from
those with more 'Yes' to less 'Yes'. In some cases no response is provided, and we assume here that
missing value is equivalent to 'dont know' placed in the middle between Yes and No.
There are other techniques for dealing with missing values, like deletion, imputation, group analysis.
    - Has frequently washed hands or used hand sanitizer            : Yes 82% | No 17% | Don't know <1%
    - Has avoided close contact with others with flu-like symptoms  : Yes 72% | No 27% | Don't know <1%
    - Has avoided touching eyes, nose, or mouth                     : Yes 67% | No 32% | Don't know <1%
    - Has reduced time at large gatherings                      : Yes 35% | No 63% | Don't know <1%
    - Has reduced contact with people outside of own household  : Yes 34% | No 66% | Don't know <1%
    - Has bought a face mask            : Yes 7% | No 93% | Don't know <1%
    - Has taken antiviral medications   : Yes 5% | No 95% | Don't know <1%

- Doctor recommendations


Code sharing:
Privately sharing code or data outside of teams is not permitted.
Participants are permitted to publicly share source or executable code developed in connection with or
based upon the Data, or otherwise relevant to the Competition,
provided that such sharing does not violate the intellectual property rights of any third party.
By so sharing, the sharing Participant is thereby deemed to have licensed the shared code
under the MIT License (an open source software license commonly
described at http://opensource.org/licenses/MIT).

External data:
External data is not allowed unless otherwise noted explicitly on these competition pages.
Participants agree to make no attempt to use additional data or data sources
not provided on these competition pages.

Abbreviations:
MSA - Metropolitan statistical areas

Potential inspiration:
https://scikit-learn.org/stable/auto_examples/inspection/plot_permutation_importance.html
https://datascience.stackexchange.com/questions/79570/when-to-one-hot-encode-categorical-data-when-following-crisp-dm/79575#79575


Project:
Saving charts in 'png' format requires the vl-convert-python package

Project link:
https://www.drivendata.org/competitions/66/flu-shot-learning/

Data provided:
Data is provided courtesy of the United States National Center for Health Statistics.
U.S. Department of Health and Human Services (DHHS). National Center for Health Statistics.
The National 2009 H1N1 Flu Survey. Hyattsville, MD: Centers for Disease Control and Prevention, 2012.


