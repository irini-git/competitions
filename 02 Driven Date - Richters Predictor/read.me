Problem summary
Based on aspects of building location and construction,
your goal is to predict the level of damage to buildings caused by
the 2015 Gorkha earthquake in Nepal.

Data

1. Labels
There are both categorical and numeric features.

1.1 Below is short description and a quick summary of values.

- geo_level_1_id, geo_level_2_id, geo_level_3_id (type: int):
geographic region in which building exists,
from largest (level 1) to most specific sub-region (level 3).
Possible values: level 1: 0-30, level 2: 0-1427, level 3: 0-12567.
Was not able to identify any potential for improvement, will use as is.

- count_floors_pre_eq (type: int):
number of floors in the building before the earthquake.
Was not able to identify any potential for improvement, will use as is.
2    52406
3    18554
1    13264
4     1762
5      793
6       74
7       13
8        2

- age (type: int):
age of the building in years.
There is a potential for dropping below values of 995 y.
There are some buildings aged 995 years, and there is a gap in age do that
the one before 995 is 200 years.
It might introduce some bias.
    value damage_grade  count feature
106   995            3    389     age
105   995            2    822     age
104   995            1    179     age
103   200            3     39     age

- area_percentage (type: int):
normalized area of the building footprint.
Introduce 'larger than 30'

- height_percentage (type: int):
normalized height of the building footprint.
Introduce 'larger than 15'

- land_surface_condition (type: categorical):
surface condition of the land where the building was built. Possible values: n, o, t.
t    72180
n    11885
o     2803

- foundation_type (type: categorical):
type of foundation used while building. Possible values: h, i, r, u, w.
r    73178
w     4930
u     4648
i     3603
h      509

- roof_type (type: categorical):
type of roof used while building. Possible values: n, q, x
n    61133
q    20329
x     5406

- ground_floor_type (type: categorical):
type of the ground floor. Possible values: f, m, v, x, z.
f    69972
x     8232
v     8138
z      330
m      196

- other_floor_type (type: categorical):
type of constructions used in higher than the ground floors (except of roof)
q    55004
x    14691
j    13069
s     4104

- position (type: categorical):
position of the building
s    67373
t    14362
j     4365
o      768

- plan_configuration (type: categorical):
building plan configuration.
d    83255
q     1949
u     1260
...

- has_superstructure_adobe_mud (type: binary):
flag variable that indicates if the superstructure was made of Adobe/Mud.
0    79054
1     7814

- has_superstructure_mud_mortar_stone (type: binary):
flag variable that indicates if the superstructure was made of Mud Mortar - Stone.
1    66237
0    20631

- has_superstructure_stone_flag (type: binary):
flag variable that indicates if the superstructure was made of Stone.
0    83874
1     2994

has_superstructure_cement_mortar_stone (type: binary):
flag variable that indicates if the superstructure was made of Cement Mortar - Stone.
0    85255
1     1613

- has_superstructure_mud_mortar_brick (type: binary):
flag variable that indicates if the superstructure was made of Mud Mortar - Brick.
0    81008
1     5860

- has_superstructure_cement_mortar_brick (type: binary):
flag variable that indicates if the superstructure was made of Cement Mortar - Brick.
0    80454
1     6414

has_superstructure_timber
0    64844
1    22024
Name: count, dtype: int64

- has_superstructure_timber (type: binary):
flag variable that indicates if the superstructure was made of Timber.
0    79599
1     7269

- has_superstructure_bamboo (type: binary):
flag variable that indicates if the superstructure was made of Bamboo.
0    83176
1     3692

- has_superstructure_rc_engineered
-----

- has_superstructure_rc_non_engineered (type: binary):
flag variable that indicates if the superstructure was made of non-engineered reinforced concrete.
0    85496
1     1372

- has_superstructure_other (type: binary):
flag variable that indicates if the superstructure was made of any other material.
0    85547
1     1321

- legal_ownership_status (type: categorical):
legal ownership status of the land where building was built.
v    83694
a     1795
w      862
r      517

- count_families (type: int): number of families that live in the building.
1    75262
0     7075
2     3716
...

- has_secondary_use (type: binary):
flag variable that indicates if the building was used for any secondary purpose.
0    77185
1     9683

- has_secondary_use_agriculture (type: binary):
flag variable that indicates if the building was used for agricultural purposes.
0    81300
1     5568

- has_secondary_use_hotel (type: binary):
flag variable that indicates if the building was used as a hotel
0    83926
1     2942

- has_secondary_use_rental (type: binary):
flag variable that indicates if the building was used for rental purposes.
0    86152
1      716

- has_secondary_use_institution (type: binary):
flag variable that indicates if the building was used as a location of any institution.
0    86780
1       88

- has_secondary_use_school (type: binary):
flag variable that indicates if the building was used as a school.
0    86836
1       32

- has_secondary_use_industry (type: binary):
flag variable that indicates if the building was used for industrial purposes.
0    86781
1       87

has_secondary_use_health_post (type: binary):
flag variable that indicates if the building was used as a health post.
0    86859
1        9

- has_secondary_use_gov_office (type: binary):
flag variable that indicates if the building was used fas a government office.
0    86858
1       10

- has_secondary_use_use_police (type: binary):
flag variable that indicates if the building was used as a police station.
0    86864
1        4

- has_secondary_use_other (type: binary):
flag variable that indicates if the building was secondarily used for other purposes.
0    86442
1      426

1.2 Features to drop
There are no Null values, but...
some features have 'non-used' values, and a highly disbalanced.
For example, has_secondary_use_use_police can be Yes and No, and
almost all values are No (86k) and not Yes (426 entries).

We will define a cut-off value for binary features of 0.01% if ok to drop the entry.
In the code, it is the parameter CUTOFF_COLUMNS_DROP = 0.001

References
DrivenData. (2019). Richter's Predictor: Modeling Earthquake Damage.
Retrieved [Month Day Year] from https://www.drivendata.org/competitions/57/nepal-earthquake.